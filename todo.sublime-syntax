%YAML 1.2
---

# Copyright Â© 2020 Mathijs Lagerberg
# This work is free. You can redistribute it and/or modify it under the
# terms of the Do What The Fuck You Want To Public License, Version 2,
# as published by Sam Hocevar. See the COPYING file for more details.

# Cheat sheet:
# - red:    markup.deleted
# - orange:  ?
# - yellow: string.quoted.double.json
# - green:  entity.name or markup.inserted
# - blue:   variable.function
# - purple: constant.numeric
# - grey:   comment.line
#
# - red & bold:   keyword.control
# - italic:       markup.italic
#

name: TODO
file_extensions: [txt]
scope: source.json
contexts:
  main:

    # Titles
    - match: '(===)\s(.*)\s(===)'
      scope: markup.heading
      captures:
        1: keyword.control
        3: keyword.control
    # Markdown-style titles
    - match: '(#+)\s(.*)'
      scope: markup.heading
      captures:
        1: keyword.control

    # Open tasks start with '[ ]'
    # We grey out the brackets
    - match: '(.*)(\[\s\])'
      captures:
        2: comment.line
      push: task_open
    # Finished tasks start with '[v]'
    # - Grey out the brackets
    # - Green checkmark (=v)
    - match: '(.*)\[(v)\]'
      captures:
        2: entity.name
      push: task_done
    # Canceled with '[x]'
    # - Grey out the brackets
    # - Red cross (=x)
    - match: '(.*)\[(x)\]'
      captures:
        2: keyword.control
      push: task_canceled
    # And with a ~ they are partially done
    # - Grey out the brackets
    # - Entire line will be yellow
    - match: '(.*)\[(~)\]'
      captures:
        2: string.quoted.double.json
      push: task_semi_done
    # And with a ? they are mayyyybe done?
    # - Grey out the brackets
    # - Entire line will be yellow
    - match: '(.*)\[(\?)\]'
      captures:
        2: keyword.control
      push: task_semi_done
    # And with a ! they are very important
    # - Highlight brackets
    # - Red !
    # - Entire line will be blue or purple or someting
    - match: '(.*)\[(\!)\]'
      captures:
        2: string.quoted.double.json
      push: task_important

    # Start of a day
    # Datestamp will be purple, the rest is italic
    - match: '^(ma|di|wo|woe|do|vr|vrij|za/zo|za|zo)[a-zA-Z0-9\s]*'
      scope: constant.numeric
      push: start_of_day
    - match: '^(Mon|Tue|Wed|Thu|Fri|Sat|Sun)[a-zA-Z0-9\s]*'
      scope: constant.numeric
      push: start_of_day

    # Week separator
    - match: '^-{3,}$'
      scope: markup.deleted

    # Top separator
    - match: '^=+$'
      scope: markup.inserted

    # Body text is not just for tasks, they can be at the start of a line too
    - include: body_text

  # End a yellow block
  semi_done_eol:
    - meta_scope: string.quoted.double.json
    - match: $
      pop: true

  # Subtasks all end at the end of the line
  subtask_open:
    - meta_scope: meta.annotation.parameters
    - match: $
      pop: true
    - include: body_text
  subtask_done:
    - meta_scope: comment.line
    - match: $
      pop: true
  subtask_canceled:
    - meta_scope: comment.block
    - match: $
      pop: true
  subtask_semi_done:
    - meta_scope: string.quoted.double.json
    - match: .
      push: semi_done_eol
    - match: $
      pop: true
    - include: body_text
  subtask_important:
    - meta_scope: markup.deleted
    - match: $
      pop: true

  start_of_day:
    - match: '\-'
      push: day_label
    - match: $
      pop: true
  day_label:
    - meta_scope: markup.italic
    - match: $
      pop: true

  end_task_scope:
    # Pop off at root
    - match: ^(?=[^ ])
      pop: true
    # pop off at a line with less indention as this scope
    - match: ^(?!\1)
      pop: true
    # pop off at a line with same indention as this scope
    - match: ^(?=\1[^ ])
      pop: true

  pop_eol:
    - match: $
      pop: true

  task_open:
    - match: '^(\s{4}|\t)*(-)'
      captures:
        1: entity.name
        2: comment.line
      scope: entity.name
      push: subtask_open
    - match: '^(\s{4}|\t)*x'
      scope: keyword.control
      push: subtask_canceled
    - match: '^(\s{4}|\t)*v'
      scope: entity.name
      push: subtask_done
    - match: '^(\s{4}|\t)*~'
      scope: string.quoted.double.json
      push: subtask_semi_done
    - match: '^(\s{4}|\t)*\?'
      scope: keyword.control
      push: subtask_semi_done
    - match: '^(\s{4}|\t)*\!'
      scope: keyword.control
      push: subtask_important
    - include: body_text
    - include: end_task_scope

  task_semi_done:
    - meta_scope: string.quoted.double.json
    - match: '^(\s{4}|\t)*-'
      scope: entity.name
      push: subtask_open
    - match: '^(\s{4}|\t)*x'
      scope: keyword.control
      push: subtask_canceled
    - match: '^(\s{4}|\t)*v'
      scope: entity.name
      push: subtask_done
    - match: '^(\s{4}|\t)*~'
      scope: constant.numeric
      push: subtask_semi_done
    - match: '^(\s{4}|\t)*\?'
      scope: keyword.control
      push: subtask_semi_done
    - match: '^(\s{4}|\t)*\!'
      scope: keyword.control
      push: subtask_important
    - include: body_text
    - include: end_task_scope

  task_important:
    - meta_scope: keyword.control
    - match: '^(\s{4}|\t)*-'
      scope: entity.name
      push: subtask_open
    - match: '^(\s{4}|\t)*x'
      scope: keyword.control
      push: subtask_canceled
    - match: '^(\s{4}|\t)*v'
      scope: entity.name
      push: subtask_done
    - match: '^(\s{4}|\t)*~'
      scope: constant.numeric
      push: subtask_semi_done
    - match: '^(\s{4}|\t)*\?'
      scope: keyword.control
      push: subtask_semi_done
    - match: '^(\s{4}|\t)*\!'
      scope: keyword.control
      push: subtask_important
    - include: body_text
    - include: end_task_scope

  task_done:
    - meta_scope: comment.line
    - match: '^(\s{4}|\t)*[\-xv~?!]'
      push: subtask_done
    - include: end_task_scope

  task_canceled:
    - meta_scope: comment.block
    - match: '^(\s{4}|\t)*[\-xv~?!]'
      scope: keyword.control
      push: subtask_canceled
    - include: end_task_scope

  # Body text is not task-related, but copies a few
  # Markdown features for convenience. And timestamps.
  body_text:
    - include: quote
    - include: timestamp
    - include: inline_code
    - include: urls
    - include: bold
    - include: italic
  quote:
    - match: '^\s*>'
      scope: comment.line
  timestamp:
    - match: '[0-9]{1,2}:[0-9]{2}(\s*-\s*[0-9]{1,2}:[0-9]{2})?'
      scope: variable.function
  inline_code:
    - match: '(`)(.*)(`)'
      scope: markup.raw
      captures:
        1: keyword.control
        3: keyword.control
  bold:
    - match: '\*.*\*'
      scope: markup.bold
  italic:
    - match: '_.*_'
      scope: variable.language
  urls:
    - match: '[^\s]+://[^\s]+'
      scope: markup.underline.link
